[tool.poetry]
name = "ramqp"
version = "0.0.0"  # Set by CI during release
description = "Rammearkitektur AMQP library (aio_pika wrapper)"
authors = ["Magenta ApS <info@magenta.dk>"]
license = "MPL-2.0"
readme = "README.md"
homepage = "https://magenta.dk/"
repository = "https://git.magenta.dk/rammearkitektur/ramqp"
keywords = ["os2mo", "amqp"]
packages = [ { include = "ramqp" } ]
include = ["ramqp/py.typed"]

[tool.poetry.dependencies]
python = "^3.10"
aio-pika = ">=8.3,<10.0"
structlog = "^23.1.0"
prometheus-client = ">=0.16,<0.20"
pydantic = "^1.10.5"
more-itertools = "^9.1.0"
fastapi = ">=0.108.0,<1.0"
anyio = "^3.6.2"
ra-utils = "^1.12.4"

[tool.poetry.group.dev.dependencies]
pytest = "^7.1.1"
black = "^22.3.0"
reorder-python-imports = "^3.0.1"
mypy = "^0.942"
pre-commit = "^2.18.1"
hypothesis = "^6.41.0"
pytest-asyncio = "^0.19.0"
pytest-split = "^0.8.0"
pytest-cov = "^4.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode="auto"
markers = [
    "integrationtest: marks tests as integration tests (Need RabbitMQ)",
    "unittest: marks tests as unit tests (i.e. all non-integration tests"
]

[tool.mypy]
python_version = "3.10"
warn_return_any = "True"
warn_unused_configs = "True"
check_untyped_defs = "True"
disallow_untyped_defs = "True"
plugins = "pydantic.mypy"

[tool.flake8]
max-line-length = 88
exclude = [
".git", "__pycache__", ".mypy_cache", ".pytest_cache", ".venv", ".gitlab"
]
